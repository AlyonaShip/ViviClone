@model Application.EntitiesModels.Models.LoginViewModel
@using Microsoft.AspNetCore.Identity
@using Application.EntitiesModels.Entities
@using Application.EntitiesModels.Models
@inject SignInManager<ApplicationUser> SignInManager

@{string errorLogin = "none";}
@if (TempData.Count != 0)
{
    if (TempData.Keys.Contains("errorLoginMerge"))
    {
        errorLogin = TempData["errorLoginMerge"].ToString();
    }
}

@* Needs to be removed *@
<style>
    .m-t-10 {
        margin-top: 10px;
    }

    .modal-title {
        font-weight: 500;
        line-height: unset;
    }
</style>
@* Needs to be removed *@

<div class="modal fixWindowModal" id="merge-account" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Вход в другой аккаунт</h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="closeMergeAccountModal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if (errorLogin == "Failed Login")
                {
                    <div id="loginError">
                        <p style="color: red;">&bull; Неправильный Email или Пароль</p>
                    </div>

                }
                <form asp-controller="Account" asp-action="MergeAccountByEmail" class="m-t-10">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Email" class="control-label"></label>
                        <input id="loginEmail" class="form-control" asp-for="Email" autocomplete="off">
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Password" class="control-label"></label>
                        <input id="loginPassword" asp-for="Password" class="form-control" autocomplete="off" />
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                    <div class="form-group m-b-0">
                        <button type="submit" class="btn btn-primary">
                            Войти
                        </button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                @{
                    var providers = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();

                    @foreach (var provider in providers)
                    {
                        @Html.ActionLink(
                            "    " + provider.Name,
                            "SignIn",
                            "Account",
                            routeValues: new
                            {
                                provider = provider.Name,
                                mergeAccount = true
                            },
                            htmlAttributes: new
                            {
                                @class = $"fa fa-{provider.Name.ToLower()}"
                            })
                    }
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}}

<script>
    let closeMergeAccountButton = $('#closeMergeAccountModal');

    closeMergeAccountButton.on("click", function () {
        $('#body').removeClass("fixBodyModal");
        $('#loginError').remove();
    })
</script>