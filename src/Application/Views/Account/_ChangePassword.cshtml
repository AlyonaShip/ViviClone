@model Application.EntitiesModels.Models.Auth.ResetPasswordModel
@using Application.EntitiesModels.Entities
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<Program> Localizer
@inject SignInManager<ApplicationUser> SignInManager

@{string errorResetPassword = "none"; string[] errors = null;}
@if (TempData.Count != 0)
{
    if (TempData.Keys.Contains("errorResetPassword"))
    {
        errorResetPassword = "true";
        errors = TempData["errorResetPassword"].ToString().Split(";");
    }
}

@*Needs to be deleted or moved*@
<style>
    .fixWindowModal {
        bottom: 0;
        right: 0;
        background: rgba(0, 0, 0, 0.7);
        padding-right: 0px !important;
        overflow-y: hidden !important;
    }

    .modal-title {
        font-weight: 500;
        line-height: unset;
    }
</style>
@*Needs to be deleted or moved*@

<div class="modal fixWindowModal" id="changePasswordModal" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Смена пароля</h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="closeChangePasswordModalWindow">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="changePasswordForm" asp-controller="Account" asp-action="ChangePassword" method="post" class="m-t-10">
                    @if (errorResetPassword != "none")
                    {
                        foreach (var error in errors)
                        {
                            if (error != "")
                            {
                                <div id="changePasswordError">
                                    <p style="color: red;">&bull; @Localizer[error].Value</p>
                                </div>
                            }
                        }
                    }
                    <div class="form-group">
                        <label asp-for="Password" class="control-label"></label>
                        <input asp-for="Password" class="form-control" autocomplete="off" />
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ConfirmPassword" class="control-label"></label>
                        <input asp-for="ConfirmPassword" class="form-control" autocomplete="off" />
                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                    </div>
                    <div class="form-group m-b-0">
                        <button type="submit" class="btn btn-primary">
                            Сбросить
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}}

<script>
    let closeButton = $('#closeChangePasswordModalWindow');

    closeButton.on("click", function () {
        let changePassword = $('#changePasswordError');

        changePassword.remove();
        $('#body').removeClass("fixBodyModal");
    })
</script>